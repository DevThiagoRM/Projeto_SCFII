// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoAcoesSustentaveis.Infrastructure.Data.AppContext;

#nullable disable

namespace Projeto_SCFII.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cargos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeCargo = "Desenvolvedor"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeDepartamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeDepartamento = "Departamento de TI"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoEnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NomeGenero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Generos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Homem cisgênero",
                            NomeGenero = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Mulher cisgênero",
                            NomeGenero = "Feminino"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Pessoa que não se identifica dentro do binário homem/mulher",
                            NomeGenero = "Não binário"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Pessoa trans identificada como homem",
                            NomeGenero = "Transgênero Homem"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Pessoa trans identificada como mulher",
                            NomeGenero = "Transgênero Mulher"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Pessoa cuja identidade de gênero varia com o tempo",
                            NomeGenero = "Gênero Fluído"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Pessoa sem identidade de gênero definida",
                            NomeGenero = "Agênero"
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Pessoa com características sexuais diversas",
                            NomeGenero = "Intersexo"
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Pessoa que opta por não declarar o gênero",
                            NomeGenero = "Prefere não dizer"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Raca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeRaca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Racas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeRaca = "Branca"
                        },
                        new
                        {
                            Id = 2,
                            NomeRaca = "Preta"
                        },
                        new
                        {
                            Id = 3,
                            NomeRaca = "Parda"
                        },
                        new
                        {
                            Id = 4,
                            NomeRaca = "Amarela"
                        },
                        new
                        {
                            Id = 5,
                            NomeRaca = "Indígena"
                        },
                        new
                        {
                            Id = 6,
                            NomeRaca = "Prefere não dizer"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.StatusUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatusUsuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Ativo"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Bloqueado"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Inativo"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoTelefoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoTelefoneId");

                    b.ToTable("Telefones", (string)null);
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoDeEndereco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoEndereco", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TipoDeEndereco = "Residencial"
                        },
                        new
                        {
                            Id = 2,
                            TipoDeEndereco = "Comercial"
                        },
                        new
                        {
                            Id = 3,
                            TipoDeEndereco = "Cobrança"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoTelefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoDeTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposTelefone");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TipoDeUsuario = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            TipoDeUsuario = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            TipoDeUsuario = "Usuário Comum"
                        });
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AtualizadoPorId")
                        .HasColumnType("int");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int?>("CriadoPorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RacaId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorId");

                    b.HasIndex("CargoId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GeneroId");

                    b.HasIndex("RacaId");

                    b.HasIndex("StatusUsuarioId");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.UsuarioEndereco", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "EnderecoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("UsuariosEnderecos", (string)null);
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.UsuarioTelefone", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "TelefoneId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("UsuariosTelefones", (string)null);
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoEndereco", "TipoEndereco")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoEnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Telefone", b =>
                {
                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoTelefone", "TipoTelefone")
                        .WithMany("Telefones")
                        .HasForeignKey("TipoTelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTelefone");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", "AtualizadoPor")
                        .WithMany("UsuariosAtualizados")
                        .HasForeignKey("AtualizadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Usuarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", "CriadoPor")
                        .WithMany("UsuariosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Genero", "Genero")
                        .WithMany("Usuarios")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Raca", "Raca")
                        .WithMany("Usuarios")
                        .HasForeignKey("RacaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.StatusUsuario", "StatusUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("StatusUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AtualizadoPor");

                    b.Navigation("Cargo");

                    b.Navigation("CriadoPor");

                    b.Navigation("Departamento");

                    b.Navigation("Genero");

                    b.Navigation("Raca");

                    b.Navigation("StatusUsuario");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.UsuarioEndereco", b =>
                {
                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Endereco", "Endereco")
                        .WithMany("UsuarioEndereco")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioEndereco")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.UsuarioTelefone", b =>
                {
                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Telefone", "Telefone")
                        .WithMany("UsuarioTelefone")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioTelefone")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telefone");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Endereco", b =>
                {
                    b.Navigation("UsuarioEndereco");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Genero", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Raca", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.StatusUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Telefone", b =>
                {
                    b.Navigation("UsuarioTelefone");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoEndereco", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoTelefone", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProjetoAcoesSustentaveis.Infrastructure.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioEndereco");

                    b.Navigation("UsuarioTelefone");

                    b.Navigation("UsuariosAtualizados");

                    b.Navigation("UsuariosCriados");
                });
#pragma warning restore 612, 618
        }
    }
}
